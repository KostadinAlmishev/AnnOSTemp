BOOTLOADER = ${KERNEL_DIR}/boot/bootloader
LOADER = ${KERNEL_DIR}/loader/loader
KERNEL = ${KERNEL_DIR}/kernel

KERNEL_LIB_DIR = ${KERNEL_DIR}/lib
KERNEL_LIB_NAME = lib.a

KERNEL_LIB32_DIR = ${KERNEL_LIB_DIR}/${ARCH32}
KERNEL_LIB64_DIR = ${KERNEL_LIB_DIR}/${ARCH64}

KERNEL_LIB32 = ${KERNEL_LIB32_DIR}/${KERNEL_LIB_NAME}
KERNEL_LIB64 = ${KERNEL_LIB64_DIR}/${KERNEL_LIB_NAME}

# Where to load kernel (-32Gb)
KERNEL_BASE = 0xFFFFFFF800000000

KERNEL_CFLAGS = ${CFLAGS} -O0 ${X64_CFLAGS} \
		-DVADDR_BASE=${KERNEL_BASE} \
		-DKERNEL_BASE=${KERNEL_BASE}
KERNEL_LDFALGS = ${LDFLAGS} -O0 -lgcc \
		 -Wl,--format=binary -Wl,${USER_PROGS} -Wl,--format=default

kernel_sources = kernel.c \
		 syscall.c \
		 cpu.c \
		 task.c \
		 interrupt/interrupt.c \
		 interrupt/timer.c \
		 interrupt/keyboard.c
kernel_asm_sources = interrupt/interrupt_entry.S
kernel_objects = $(patsubst %.c, ${KERNEL_DIR}/%.o, ${kernel_sources}) \
		 $(patsubst %.S, ${KERNEL_DIR}/%.o, ${kernel_asm_sources})
kernel_deps = $(patsubst %.o, %.d, ${kernel_objects})

${IMAGE}: $(KERNEL) $(BOOTLOADER) $(LOADER)
	dd if=/dev/zero of=${IMAGE} bs=1M count=10
	dd if=$(BOOTLOADER) of=${IMAGE} conv=notrunc
	dd if=$(LOADER) of=${IMAGE} seek=1 conv=notrunc
	dd if=$(KERNEL) of=${IMAGE} bs=1M seek=1 conv=notrunc

KERNEL_LIB_ARCH := ${ARCH32}
KERNEL_LIB_CFLAGS := ${CFLAGS} ${X86_CFLAGS} -O0 \
		    -DKERNEL_BASE=${KERNEL_BASE} -DVADDR_BASE=0
include ${KERNEL_LIB_DIR}/Makefile.part

KERNEL_LIB_ARCH := ${ARCH64}
KERNEL_LIB_CFLAGS := ${KERNEL_CFLAGS}
include ${KERNEL_LIB_DIR}/Makefile.part

include ${KERNEL_DIR}/boot/Makefile.part
include ${KERNEL_DIR}/loader/Makefile.part

$(KERNEL): ${kernel_objects} ${STDLIB64} ${KERNEL_LIB64} $(USER_PROGS)
	$(CC) -T ${KERNEL_DIR}/linker.ld -o $@ ${kernel_objects} ${STDLIB64} ${KERNEL_LIB64} ${KERNEL_LDFALGS}

${KERNEL_DIR}/%.o: ${KERNEL_DIR}/%.S
	$(CC) -c -o $@ $< ${KERNEL_CFLAGS}

${KERNEL_DIR}/%.o: ${KERNEL_DIR}/%.c
	$(CC) -c -o $@ $< ${KERNEL_CFLAGS}

-include ${kernel_deps}
